Index: luci/modules/luci-compat/luasrc/model/network.lua
===================================================================
--- luci.orig/modules/luci-compat/luasrc/model/network.lua
+++ luci/modules/luci-compat/luasrc/model/network.lua
@@ -440,7 +440,6 @@ function init(cursor)
 						port.label = role:upper()
 					end
 
-					port.role = nil
 					port.index = nil
 				end
 
Index: luci/modules/luci-base/htdocs/luci-static/resources/network.js
===================================================================
--- luci.orig/modules/luci-base/htdocs/luci-static/resources/network.js
+++ luci/modules/luci-base/htdocs/luci-static/resources/network.js
@@ -492,7 +492,6 @@ function initNetworkState(refresh) {
 							else
 								port.label = role.toUpperCase();
 
-							delete port.role;
 							delete port.index;
 						}
 
Index: luci/modules/luci-mod-network/htdocs/luci-static/resources/view/network/switch.js
===================================================================
--- luci.orig/modules/luci-mod-network/htdocs/luci-static/resources/view/network/switch.js
+++ luci/modules/luci-mod-network/htdocs/luci-static/resources/view/network/switch.js
@@ -12,8 +12,11 @@ function parse_portvalue(section_id) {
 	var ports = L.toArray(uci.get('network', section_id, 'ports'));
 
 	for (var i = 0; i < ports.length; i++) {
+		var r = ports[i].match(/^([^t0-9]+)([t]?)/);
 		var m = ports[i].match(/^(\d+)([tu]?)/);
 
+		if (r && r[1] == this.role)
+			return r[2] || 'u';
 		if (m && m[1] == this.option)
 			return m[2] || 'u';
 	}
@@ -355,6 +358,7 @@ return view.extend({
 
 				o.cfgvalue = parse_portvalue;
 				o.validate = validate_portvalue;
+				o.role = portspec.role;
 				o.write    = function() {};
 
 				o.description = render_port_status(E('small', {
