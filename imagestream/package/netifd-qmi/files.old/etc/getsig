#!/bin/sh

log() {
	logger -t "Getsig Log " "$@"
}

local DEVICE
local TOGGLE
local NUM

local RUNNING=$(uci get cbi_file.Version.getsig)
if [ $RUNNING = 1 ]; then
	exit 0
fi

uci set cbi_file.Version.getsig="1"
uci set cbi_file.Version.cmode="1"
uci set cbi_file.Version.sms="0"
uci set cbi_file.Version.smsread="1"
uci set cbi_file.Version.smsmsg="0"
uci commit cbi_file

source /etc/variable.file
rm -f /tmp/cmd.at
rm -f /tmp/result.at
rm -f /tmp/smsresult.at

PASS1="0"

echo "-" > /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "Waiting for Data" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo " " >> /tmp/status.file
echo " " >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file

process_getsig() {

	OX=$(gcom -d $DEVICE -s /etc/3ginfo.gcom 2>/dev/null)
	M6=$(echo "$OX" | sed -e "s/      / /g")
	M5=$(echo "$M6" | sed -e "s/     / /g")
	M4=$(echo "$M5" | sed -e "s/    / /g")
	M3=$(echo "$M4" | sed -e "s/   / /g")
	M2=$(echo "$M3" | sed -e "s/  / /g")
	M2=$(echo "$M2" | sed -e "s/TAC:/   /;s/Tx Power:/   /;s/SINR/   /;s!SYSINFOEX:!SYSINFOEX: !;s!CNTI:!CNTI: !")
	M1=$(echo "$M2" | sed -e "s!Car0 Tot Ec/Io!+ECIO!;s!Car1 Tot Ec/Io!+ECIO1!;s!Car0 RSCP!+RSCP!;s!+CGMM: !!")
	M2=$(echo "$M1" | sed -e "s!Car1 RSCP!+RSCP1!;s!CSNR:!CSNR: !;s!RSSI (dBm):!RSSI4: !;s!AirCard !AirCard!;s!USB !USB!")
	M3=$(echo "$M2" | sed -e "s!RSRP (dBm):!RSRP4: !;s!RSRQ (dB):!RSRQ4: !;s!LTERSRP:!LTERSRP: !;s!Model:!+MODEL:!;s!SYSCFGEX:!SYSCFGEX: !")
	M=$(echo "$M3" | sed -e "s!RX level Carrier 0 (dBm):!RSSI3: !;s!RX level Carrier 1 (dBm):!RSSI13: !;s!SYSCFG:!SYSCFG: !;s!  ! !g")
	O=$M

	if [ "x$TOGGLE" != "x" ]; then
		if [ $TOGGLE = 1 ]; then
			/etc/logscript "$M"
		fi
	fi

	echo $O

	CSQ=$(echo "$O" | awk -F[,\ ] '/^\+CSQ/ {print $2}')

	[ "x$CSQ" = "x" ] && CSQ=-1
	if [ $CSQ -ge 0 -a $CSQ -le 31 ]; then
		CSQ_PER=$(($CSQ * 100/31))
		CSQ_RSSI=$((2 * CSQ - 113))
		CSQX=$CSQ_RSSI
		[ $CSQ -eq 0 ] && CSQ_RSSI="<= "$CSQ_RSSI
		[ $CSQ -eq 31 ] && CSQ_RSSI=">= "$CSQ_RSSI
		CSQ_PER=$CSQ_PER"%"
		CSQ_RSSI=$CSQ_RSSI" dBm"
	else
		CSQ="-"
		CSQ_PER="-"
		CSQ_RSSI="-"
	fi

#sierra

	ECIO=$(echo "$O" | awk -F[\ ] '/^\+ECIO:/ {print $2}')
	[ "x$ECIO" = "x" ] && ECIO="-"
	ECIO1=$(echo "$O" | awk -F[\ ] '/^\+ECIO1:/ {print $2}')
	[ "x$ECIO1" = "x" ] && ECIO1=" "
	[ "$ECIO1" = "n/a" ] && ECIO1=" "

	RSCP=$(echo "$O" | awk -F[\ ] '/^\+RSCP:/ {print $2}')
	[ "x$RSCP" = "x" ] && RSCP="-"
	RSCP1=$(echo "$O" | awk -F[\ ] '/^\+RSCP1:/ {print $2}')
	[ "x$RSCP1" = "x" ] && RSCP1=" "
	[ "$RSCP1" = "n/a" ] && RSCP1=" "

	RSSI3=$(echo "$O" | awk -F[\ ] '/^\RSSI3:/ {print $2}')
	if [ "x$RSSI3" != "x" ]; then
		CSQ_RSSI=$RSSI3" dBm"
	else
		if [ "$ECIO" != "-" -a "$RSCP" != "-" ]; then
			EX=$(printf %.0f $ECIO)
			CSQ_RSSI=`expr $RSCP - $EX`
			CSQ_RSSI=$CSQ_RSSI" dBm"
		fi
	fi

	RSSI4=$(echo "$O" | awk -F[\ ] '/^\RSSI4:/ {print $2}')
	if [ "x$RSSI4" != "x" ]; then
		CSQ_RSSI=$RSSI4" dBm"
		RSRP4=$(echo "$O" | awk -F[\ ] '/^\RSRP4:/ {print $2}')
		if [ "x$RSRP4" != "x" ]; then
			RSCP=$RSRP4" (RSRP)"
			RSRQ4=$(echo "$O" | awk -F[\ ] '/^\RSRQ4:/ {print $2}')
			if [ "x$RSRQ4" != "x" ]; then
				ECIO=$RSRQ4" (RSRQ)"
			fi
		fi
	fi

#zte

	ZRSSI=$(echo "$O" | awk -F[,\ ] '/^\+ZRSSI/ {print $2}')
	if [ "x$ZRSSI" != "x" ]; then
		TMP_RSSI=$CSQ_RSSI
		CSQ_RSSI="-"$ZRSSI" dBm"
		ECI=$(echo "$O" | awk -F[,\ ] '/^\+ZRSSI/ {print $3}')
		if [ "x$ECI" != "x" ]; then
			ECIO=`expr $ECI / 2`
			ECIO="-"$ECIO
			RSCP=$(echo "$O" | awk -F[,\ ] '/^\+ZRSSI/ {print $4}')
			if [ "x$RSCP" != "x" ]; then
				RSCP=`expr $RSCP / 2`
				RSCP="-"$RSCP
			else
				CSQ_RSSI=$TMP_RSSI
				RSCP=$ZRSSI
				ECIO=$ECI
			fi
		else
			RSCP=$ZRSSI
			CSQ_RSSI=$TMP_RSSI
			ECIO=`expr $RSCP - $CSQX`
		fi
	fi

#huawei

	CSNR=$(echo "$O" | awk -F[,\ ] '/^\^CSNR/ {print $2}')
	if [ "x$CSNR" != "x" ]; then
		RSCP=$CSNR
		CSNR=$(echo "$O" | awk -F[,\ ] '/^\^CSNR/ {print $3}')
		if [ "x$CSNR" != "x" ]; then
			ECIO=$CSNR
		else
			ECIO=`expr $RSCP - $CSQX`
		fi
	else
		EC=$(echo "$O" | awk -F[,\ ] '/^\+CSQ/ {print $4}')
		if [ "x$EC" != "x" ]; then
			ECIO=$EC
			EX=$(printf %.0f $ECIO)
			RSCP=`expr $CSQX + $EX`
		fi
	fi

	LTERSRP=$(echo "$O" | awk -F[,\ ] '/^\^LTERSRP/ {print $2}')
	if [ "x$LTERSRP" != "x" ]; then
		RSCP=$LTERSRP" (RSRP)"
		LTERSRP=$(echo "$O" | awk -F[,\ ] '/^\^LTERSRP/ {print $3}')
		if [ "x$LTERSRP" != "x" ]; then
			ECIO=$LTERSRP" (RSRQ)"
		else
			ECIO=`expr $RSCP - $CSQX`
		fi
	fi

	NETMODE="0"
	MODTYPE="0"
#zte

	ZSNT=$(echo "$O" | awk -F[,\ ] '/^\+ZSNT/ {print $2}')
	if [ "x$ZSNT" != "x" ]; then
		MODTYPE="1"
		if [ $ZSNT = "0" ]; then
			ZSNTX=$(echo "$O" | awk -F[,\ ] '/^\+ZSNT/ {print $4}')
			if [ $ZSNTX = "0" ]; then
				NETMODE="1"
			else
				if [ $ZSNTX = "1" ]; then
					NETMODE="2"
				else
					if [ $ZSNTX = "2" ]; then
						NETMODE="4"
					else
						if [ $ZSNTX = "6" ]; then
							NETMODE="6"
						fi
					fi
				fi
			fi
		else
			if [ $ZSNT = "1" ]; then
				NETMODE="3"
			else
				if [ $ZSNT = "2" ]; then
					NETMODE="5"
				else
					if [ $ZSNT = "6" ]; then
						NETMODE="7"
					fi
				fi
			fi
		fi
	fi

#Sierra

	SELRAT=$(echo "$O" | awk -F[,\ ] '/^\!SELRAT/ {print $2}')
	if [ "x$SELRAT" != "x" ]; then
		MODTYPE="2"
		if [ $SELRAT = "00" ]; then
			NETMODE="1"
		else
			if [ $SELRAT = "01" ]; then
				NETMODE="5"
			else
				if [ $SELRAT = "03" ]; then
					NETMODE="4"
				else
					if [ $SELRAT = "02" ]; then
						NETMODE="3"
					else
						if [ $SELRAT = "04" ]; then
							NETMODE="2"
						else
							if [ $SELRAT = "05" ]; then
								NETMODE="6"
							else
								if [ $SELRAT = "06" ]; then
									NETMODE="7"
								fi
							fi
						fi
					fi
				fi
			fi
		fi
	fi

#huawei
	SYSCFG=$(echo "$O" | awk -F[,\"] '/^\^SYSCFGEX/ {print $2}')
	if [ "x$SYSCFG" != "x" ]; then
		MODTYPE="3"
		if [ $SYSCFG = "00" ]; then
			NETMODE="1"
		else
			if [ $SYSCFG = "01" ]; then
				NETMODE="3"
			else
				if [ $SYSCFG = "02" ]; then
					NETMODE="5"
				else
					if [ $SYSCFG = "03" ]; then
						NETMODE="7"
					else
						ACQ=${SYSCFG:0:2}
						if [ $ACQ = "01" ]; then
							NETMODE="2"
						else
							if [ $ACQ = "02" ]; then
								NETMODE="4"
							else
								if [ $ACQ = "03" ]; then
									NETMODE="6"
								fi
							fi
						fi
					fi
				fi
			fi
		fi
	else
		SYSCFG=$(echo "$O" | awk -F[,\ ] '/^\^SYSCFG/ {print $2}')
		if [ "x$SYSCFG" != "x" ]; then
			MODTYPE="4"
			if [ $SYSCFG = "7" ]; then
				NETMODE="1"
			else
				if [ $SYSCFG = "13" ]; then
					NETMODE="3"
				else
					if [ $SYSCFG = "14" ]; then
						NETMODE="5"
					else
						SYSCFG=$(echo "$O" | awk -F[,\ ] '/^\^SYSCFG/ {print $3}')
						if [ $SYSCFG = "0" ]; then
							NETMODE="1"
						else
							if [ $SYSCFG = "1" ]; then
								NETMODE="2"
							else
								if [ $SYSCFG = "2" ]; then
									NETMODE="4"
								fi
							fi
						fi
					fi
				fi
			fi
		fi
	fi

#Modem
	CELL="1"
	MODEM=$(echo "$O" | awk -F[:] '/DEVICE/ { print $2}')
	if [ "x$MODEM" = "x" ]; then
		CELL="0"
		MODEM="Unknown"
	else
		MODEL=$(echo "$O" | awk -F[,\ ] '/^\+MODEL/ {print $2}')
		if [ "x$MODEL" != "x" ]; then
			MODEL=$(echo "$MODEL" | sed -e 's/"//g')
			MODEM=$MODEM" "$MODEL
		fi
	fi

#cellular type
	CT=`echo $MODEL | tr '[A-Z]' '[a-z]'` 
	if echo $CT | grep -q "320u"; then
		CELL="2"
	else
		if echo $CT | grep -q "e3276"; then
			CELL="3"
		else
			if echo $CT | grep -q "e398"; then
				CELL="3"
			else
				if echo $CT | grep -q "e389"; then
					CELL="3"
				else
					if echo $CT | grep -q "e392"; then
						CELL="3"
					else
						if echo $CT | grep -q "mf821"; then
							CELL="3"
						else
							if echo $CT | grep -q "mf820"; then
								CELL="3"
							else
								if echo $CT | grep -q "330u"; then
									CELL="2"
								fi
							fi
						fi
					fi
				fi
			fi
		fi
	fi

	COPS=$(echo "$O" | awk -F[\"] '/^\+COPS: 0,2/ {print $2}')
	if [ "x$COPS" = "x" ]; then
		COPS="-"
		COPS_MCC="-"
		COPS_MNC="-"
	else
		COPSO=$COPS
		COPS_MCC=${COPS:0:3}
		COPS_MNC=${COPS:3:3}
		COPS=$(awk -F[\;] '/'$COPS'/ {print $2}' /etc/mccmnc)
		[ "x$COPS" = "x" ] && COPS=$COPSO
	fi

	if [ "$COPS" = "-" ]; then
		COPS=$(echo "$O" | awk -F[\"] '/^\+COPS: 0,0/ {print $2}')
		if [ "x$COPS" = "x" ]; then
			COPS="-"
			COPS_MCC="-"
			COPS_MNC="-"
		fi
	fi
	COPS_MNC=" "$COPS_MNC

	MODE="-"

# Huawei
	TECH=$(echo "$O" | awk -F[,] '/^\^SYSINFOEX/ {print $9}' | sed 's/"//g')
	if [ "x$TECH" != "x" ]; then
		MODE="$TECH"
	fi

# Huawei 
	if [ "x$MODE" = "x-" ]; then
		TECH=$(echo "$O" | awk -F[,\ ] '/^\^SYSINFO/ {print $7}')
		if [ "x$TECH" != "x" ]; then
			case $TECH in
				17*) MODE="HSPA+ (64QAM)";;
				18*) MODE="HSPA+ (MIMO)";;
				1*) MODE="GSM";;
				2*) MODE="GPRS";;
				3*) MODE="EDGE";;
				4*) MODE="UMTS";;
				5*) MODE="HSDPA";;
				6*) MODE="HSUPA";;
				7*) MODE="HSPA";;
				9*) MODE="HSPA+";;
				 *) MODE=$TECH;;
			esac
		fi
	fi

# ZTE
	if [ "x$MODE" = "x-" ]; then
		TECH=$(echo "$O" | awk -F[,\ ] '/^\+ZPAS/ {print $2}' | sed 's/"//g')
		if [ "x$TECH" != "x" -a "x$TECH" != "xNo" ]; then
			MODE="$TECH"
		fi
	fi

# Sierra
	if [ "x$MODE" = "x-" ]; then
		TECH=$(echo "$O" | awk -F[,\ ] '/^\*CNTI/ {print $3}' | sed 's|/|,|g')
		if [ "x$TECH" != "x" ]; then
			MODE="$TECH"
		fi
	fi

# CREG
	CREG="+CREG"
	LAC=$(echo "$O" | awk -F[,] '/\'$CREG'/ {printf "%s", toupper($3)}' | sed 's/[^A-F0-9]//g')
	if [ "x$LAC" = "x" ]; then
	    CREG="+CGREG"
 	    LAC=$(echo "$O" | awk -F[,] '/\'$CREG'/ {printf "%s", toupper($3)}' | sed 's/[^A-F0-9]//g')
	fi

	if [ "x$LAC" != "x" ]; then
		LAC_NUM=$(printf %d 0x$LAC)
	else
		LAC="-"
		LAC_NUM="-"
	fi
	LAC_NUM="  ("$LAC_NUM")"

	CID=$(echo "$O" | awk -F[,] '/\'$CREG'/ {printf "%s", toupper($4)}' | sed 's/[^A-F0-9]//g')
	if [ "x$CID" != "x" ]; then
		if [ ${#CID} -le 4 ]; then
			LCID="-"
			LCID_NUM="-"
			RNC="-"
			RNC_NUM="-"
		else
			LCID=$CID
			LCID_NUM=$(printf %d 0x$LCID)
			RNC=$(echo "$LCID" | awk '{print substr($1,1,length($1)-4)}')
			RNC_NUM=$(printf %d 0x$RNC)
			CID=$(echo "$LCID" | awk '{print substr($1,length(substr($1,1,length($1)-4))+1)}')
			RNC_NUM=" ($RNC_NUM)"
		fi

		CID_NUM=$(printf %d 0x$CID)
	else
		LCID="-"
		LCID_NUM="-"
		RNC="-"
		RNC_NUM="-"
		CID="-"
		CID_NUM="-"
	fi
	CID_NUM="  ("$CID_NUM")"

	DOWN=$(echo "$O" | awk -F[,] '/\+CGEQNEG/ {printf "%s", $4}')
	if [ "x$DOWN" != "x" ]; then
		UP=$(echo "$O" | awk -F[,] '/\+CGEQNEG/ {printf "%s", $3}')
		DOWN=$DOWN" kbps Down | "
		UP=$UP" kbps Up"
	else
		DOWN="-"
		UP="-"
	fi


	CMODE=$(uci get cbi_file.Version.cmode)
	if [ $CMODE = 0 ]; then
		NETMODE="10"
	fi

	source /tmp/port.file
	NEWNUM=$PORT
	if [ $NEWNUM = $NUM ]; then
		echo "$DEVICE" > /tmp/status.file
		echo "$CSQ" >> /tmp/status.file
		echo "$CSQ_PER" >> /tmp/status.file
		echo "$CSQ_RSSI" >> /tmp/status.file
		echo "$MODEM" >> /tmp/status.file
		echo "$COPS" >> /tmp/status.file
		echo "$MODE" >> /tmp/status.file
		echo "$LAC" >> /tmp/status.file
		echo "$LAC_NUM" >> /tmp/status.file
		echo "$CID" >> /tmp/status.file
		echo "$CID_NUM" >> /tmp/status.file
		echo "$COPS_MCC" >> /tmp/status.file
		echo "$COPS_MNC" >> /tmp/status.file
		echo "$RNC" >> /tmp/status.file
		echo "$RNC_NUM" >> /tmp/status.file
		echo "$DOWN" >> /tmp/status.file
		echo "$UP" >> /tmp/status.file
		echo "$ECIO" >> /tmp/status.file
		echo "$RSCP" >> /tmp/status.file
		echo "$ECIO1" >> /tmp/status.file
		echo "$RSCP1" >> /tmp/status.file
		echo "$NETMODE" >> /tmp/status.file
		echo "$CELL" >> /tmp/status.file
		echo "$MODTYPE" >> /tmp/status.file
	fi
}

while [ $KEEPALIVE = 1 ]; do

	source /etc/variable.file
	source /tmp/port.file
	if [ -f "/tmp/toggle.file" ]; then
		source /tmp/toggle.file
	else
		TOGGLE="0"
	fi

	NUM=$PORT
	PORTTY="/dev/ttyUSB"
	DEVICE=$PORTTY$NUM

	echo 'DEVICE="'"$DEVICE"'"' >> /tmp/device.file

	if [ $PASS1 = 0 ]; then
		PASS1="1"
		OKAY="OK"
		export ATCMD="AT+CMGF=0"
		SX=$(gcom -d $DEVICE -s /etc/run-at.gcom 2>/dev/null)
		if `echo ${SX} | grep "${OKAY}" 1>/dev/null 2>&1`
		then
  			uci set cbi_file.Version.sms="1"
			uci commit cbi_file
		fi
	fi

	if [ -e /etc/sigstop ]; then
		/etc/sigstop "$DEVICE"
		RET=$?
		if [ $RET = 1 ]; then
			KEEPALIVE=0
		fi
	fi
	process_getsig
	sleep 1
done

echo "-" > /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "No Modem Present" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo " " >> /tmp/status.file
echo " " >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file
echo "-" >> /tmp/status.file

echo 'TOGGLE="'"0"'"' > /tmp/toggle.file
uci set cbi_file.Version.log="0"
uci set cbi_file.Version.getsig="0"
uci commit cbi_file





