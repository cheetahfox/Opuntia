#!/bin/sh /etc/rc.common
#/etc/init.d/ipsec_pre
 
NAME=ipsec_pre
 
. /lib/functions.sh
IPSEC_FILE=/etc/config/ipsec

ConfigTunnel() {
  config_get enabled "$1" enabled
  [[ "$enabled" == "0" ]] && return

  tunnel_name="$1"
  config_get gateway "$1" gateway
  config_get keyexchange "$1" keyexchange
  config_get exchange_mode "$1" exchange_mode
  config_get local_identifier "$1" local_identifier
  config_get remote_identifier "$1" remote_identifier
  config_get authentication_method "$1" authentication_method
  config_get pre_shared_key "$1" pre_shared_key 
  config_get certificate "$1" certificate
  config_get local_subnet "$1" local_subnet 
  config_get remote_subnet "$1" remote_subnet 
  config_get local_nat "$1" local_nat 
  config_get esp_encryption "$1" esp_encryption 
  config_get esp_integrity "$1" esp_integrity 
  config_get esp_dh_group "$1" esp_dh_group 
  config_get ike_encryption "$1" ike_encryption
  config_get ike_integrity "$1" ike_integrity 
  config_get ike_dh_group "$1" ike_dh_group 

  p1_proposal=""
  p2_proposal=""

  if [ "${ike_encryption}" != "" ] ; then
 	p1_proposal="p1_proposal_${tunnel_name}"
  	echo >> $IPSEC_FILE
  	echo -e "config p1_proposal '${p1_proposal}'" >> $IPSEC_FILE
  	echo -e "\toption encryption_algorithm '${ike_encryption}'" >> $IPSEC_FILE
  	echo -e "\toption hash_algorithm '${ike_integrity}'" >> $IPSEC_FILE
  	echo -e "\toption dh_group '${ike_dh_group}'" >> $IPSEC_FILE
  fi
  if [ "${esp_encryption}" != "" ] ; then
 	p2_proposal="p2_proposal_${tunnel_name}"
  	echo >> $IPSEC_FILE
  	echo -e "config p2_proposal '${p2_proposal}'" >> $IPSEC_FILE
  	echo -e "\toption encryption_algorithm '${esp_encryption}'" >> $IPSEC_FILE
  	echo -e "\toption authentication_algorithm '${esp_integrity}'" >> $IPSEC_FILE
  	echo -e "\toption pfs_group '${esp_dh_group}'" >> $IPSEC_FILE
  fi

  echo >> $IPSEC_FILE
  echo -e "config remote 'remote_${tunnel_name}'" >> $IPSEC_FILE
  echo -e "\toption enabled '1'" >> $IPSEC_FILE
  echo -e "\toption keyexchange '${keyexchange}'" >> $IPSEC_FILE
  echo -e "\toption gateway '${gateway}'" >> $IPSEC_FILE
  echo -e "\toption exchange_mode '${exchange_mode}'" >> $IPSEC_FILE
  echo -e "\toption authentication_method '${authentication_method}'" >> $IPSEC_FILE
  echo -e "\toption dpdaction restart" >> $IPSEC_FILE
  if [ "${authentication_method}" = "psk" ] ; then
  	echo -e "\toption pre_shared_key '${pre_shared_key}'" >> $IPSEC_FILE
  else
	# This won't work! Need to write the cert to ipsec.secrets or file in /etc/ipsec.d...
  	echo -e "\toption certificate '${certificate}'" >> $IPSEC_FILE
  fi
  [[ "${p1_proposal}" != "" ]] && echo -e "\tlist p1_proposal '${p1_proposal}'" >> $IPSEC_FILE
  echo -e "\tlist tunnel '${tunnel_name}'" >> $IPSEC_FILE
  if [ "$local_identifier" != "" ]; then
  	echo -e "\toption local_identifier '${local_identifier}'" >> $IPSEC_FILE
  fi
  if [ "$remote_identifier" != "" ]; then
  	echo -e "\toption remote_identifier '${remote_identifier}'" >> $IPSEC_FILE
  fi

  echo >> $IPSEC_FILE
  echo -e "config tunnel '${tunnel_name}'" >> $IPSEC_FILE
  echo -e "\toption local_subnet '${local_subnet}'" >> $IPSEC_FILE
  echo -e "\toption remote_subnet '${remote_subnet}'" >> $IPSEC_FILE
  [[ "${p2_proposal}" != "" ]] && echo -e "\toption p2_proposal '${p2_proposal}'" >> $IPSEC_FILE
}

convert_ipsec() {
  echo -e "config ipsec" > $IPSEC_FILE
  echo -e "\toption enabled '1'" >> $IPSEC_FILE

  config_load ipsec_pre
  config_foreach ConfigTunnel tunnel
}
enable () {
   convert_ipsec
   /etc/init.d/ipsec restart
}
restart () {
   convert_ipsec
   /etc/init.d/ipsec restart
}
start () {
   convert_ipsec
   /etc/init.d/ipsec start
}
stop () {
   convert_ipsec
   /etc/init.d/ipsec stop
}
