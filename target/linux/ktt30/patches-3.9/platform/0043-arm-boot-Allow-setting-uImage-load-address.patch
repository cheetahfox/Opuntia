From ebf3af50123185ac1fb3ac533c9e5ed44df8d948 Mon Sep 17 00:00:00 2001
From: Valentine Barshak <vbarshak@dev.rtsoft.ru>
Date: Sat, 9 Mar 2013 04:19:11 +0400
Subject: [PATCH 043/127] arm: boot: Allow setting uImage load address

Some bootloaders on Tegra boards may be located at low memory,
close to the kernel base address. This causes them to fail to
unpack a kernel to the default LOADADDR, since they overwrite
themselves while unpacking.
NVidia provides zImage_to_uimg.sh script to workaround this issue.
The MAGE_LOADADDR option allows to set a different LOADADDR for uImage
target, and build uImage directly, instead of using zImage_to_uimg.sh

Signed-off-by: Valentine Barshak <vbarshak@dev.rtsoft.ru>
---
 arch/arm/Kconfig       |   16 ++++++++++++++++
 arch/arm/boot/Makefile |    4 ++++
 2 files changed, 20 insertions(+), 0 deletions(-)

--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -2119,6 +2119,22 @@ config AUTO_ZRELADDR
 	  0xf8000000. This assumes the zImage being placed in the first 128MB
 	  from start of memory.
 
+config UIMAGE_LOADADDR
+	bool "Set uImage load address"
+	depends on ARCH_TEGRA
+	help
+	  Some bootloaders on Tegra boards may be located at low memory, close to
+	  the kernel base address. This causes them to fail to unpack a kernel
+	  to the default LOADADDR, since they overwrite themselves while unpacking.
+	  This options allows to set a different LOADADDR for uImage target.
+
+config UIMAGE_LOADADDR_ADDR
+	hex "uImage load address"
+	depends on UIMAGE_LOADADDR
+	default "0x81008000"
+	help
+	  This is the physical address where U-Boot should unpack the uImage.
+
 endmenu
 
 menu "CPU Power Management"
--- a/arch/arm/boot/Makefile
+++ b/arch/arm/boot/Makefile
@@ -57,6 +57,10 @@ $(obj)/zImage:	$(obj)/compressed/vmlinux
 
 endif
 
+ifeq ($(CONFIG_UIMAGE_LOADADDR),y)
+  LOADADDR=$(CONFIG_UIMAGE_LOADADDR_ADDR)
+endif
+
 ifneq ($(LOADADDR),)
   UIMAGE_LOADADDR=$(LOADADDR)
 else
