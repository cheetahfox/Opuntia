From e3131db639c7ea7a96f060cde8f7119735be87d3 Mon Sep 17 00:00:00 2001
From: Valentine Barshak <vbarshak@dev.rtsoft.ru>
Date: Sat, 6 Apr 2013 03:40:54 +0400
Subject: [PATCH 052/127] arm: tegra: pcie: Fix AXI response decoding error at
 PM resume

The tegra_pcie_add_port() callback is used for initializing PCIe ports
when PCIe is first started and when it is resumed after PM suspend.

When the PCIe subsystem is first initialized, root_bus_nr has to be
set to -1 prior to adding a port. Otherwise, the bus numbering may
become incorrect as the PCIe subsystem may treat uninitialized ports
with root_bus_nr other than -1 as initialized.

When PCIe is resumed, we should keep the old root_bus_nr values,
instead of resetting it to -1 since port bus numbers are not
re-configured this time.

We also need to remove all PCI devices when suspending in order
to have all busses re-scanned when resumed.

While at it, fix root_bus_nr type to make it treat -1 correctly.

Signed-off-by: Valentine Barshak <vbarshak@dev.rtsoft.ru>
---
 arch/arm/mach-tegra/pcie.c |   13 ++++++-------
 1 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-tegra/pcie.c b/arch/arm/mach-tegra/pcie.c
index 073497b..bac6eee 100644
--- a/arch/arm/mach-tegra/pcie.c
+++ b/arch/arm/mach-tegra/pcie.c
@@ -302,7 +302,7 @@
 
 struct tegra_pcie_port {
 	int			index;
-	u8			root_bus_nr;
+	int			root_bus_nr;
 	void __iomem		*base;
 
 	bool			link_up;
@@ -1282,7 +1282,6 @@ static void tegra_pcie_add_port(int index, u32 offset, u32 reset_reg)
 
 	tegra_pcie.num_ports++;
 	pp->index = index;
-	pp->root_bus_nr = -1;
 	memset(pp->res, 0, sizeof(pp->res));
 }
 
@@ -1312,8 +1311,10 @@ static int tegra_pcie_init(void)
 	for (port = 0; port < MAX_PCIE_SUPPORTED_PORTS; port++) {
 		ctrl_offset += (port * 8);
 		rp_offset = (rp_offset + RP_OFFSET) * port;
-		if (tegra_pcie.plat_data->port_status[port])
+		if (tegra_pcie.plat_data->port_status[port]) {
+			tegra_pcie.port[port].root_bus_nr = -1;
 			tegra_pcie_add_port(port, rp_offset, ctrl_offset);
+		}
 	}
 
 	if (tegra_pcie.plat_data->use_dock_detect &&
@@ -1372,12 +1373,10 @@ static int tegra_pcie_probe(struct platform_device *pdev)
 #ifdef CONFIG_PM
 static int tegra_pcie_suspend(struct device *dev)
 {
-	struct pci_dev *pdev = NULL;
+	struct pci_dev *pdev;
 
-	for_each_pci_dev(pdev) {
+	while ((pdev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, NULL)) != NULL)
 		pci_remove_bus_device(pdev);
-		break;
-	}
 
 	/* disable read/write registers before powering off */
 	is_pcie_noirq_op = true;
-- 
1.7.4.4

