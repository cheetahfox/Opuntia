From 9798d9a59297b6798ca6f2fae7bcfffc9cbe9176 Mon Sep 17 00:00:00 2001
From: Valentine Barshak <vbarshak@dev.rtsoft.ru>
Date: Thu, 2 May 2013 00:30:42 +0400
Subject: [PATCH 106/127] arm: tegra: ktt30: Use OF FDT for configuring I2C
 slave devices

Use OF device node status instead of command line for I2C
WM8903 audio codec and Atmel touchscreen configuration.

Signed-off-by: Valentine Barshak <vbarshak@dev.rtsoft.ru>
---
 arch/arm/mach-tegra/board-ktt30.c |   36 +++++++++++++++++++++++++++++++++---
 arch/arm/mach-tegra/common.c      |   18 ------------------
 2 files changed, 33 insertions(+), 21 deletions(-)

diff --git a/arch/arm/mach-tegra/board-ktt30.c b/arch/arm/mach-tegra/board-ktt30.c
index fe82e97..051a2b8 100644
--- a/arch/arm/mach-tegra/board-ktt30.c
+++ b/arch/arm/mach-tegra/board-ktt30.c
@@ -43,6 +43,7 @@
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/partitions.h>
 #include <linux/spi/flash.h>
+#include <linux/of.h>
 
 #include <sound/wm8903.h>
 #include <media/tegra_dtv.h>
@@ -274,8 +275,33 @@ static struct i2c_board_info __initdata ktt30_codec_wm8903_info = {
 	.platform_data = &ktt30_wm8903_pdata,
 };
 
+#ifdef CONFIG_OF
+static int __init ktt30_of_device_is_enabled(struct device_node *from,
+						const char *compatible)
+{
+	struct device_node *node;
+	int retval;
+
+	node = of_find_compatible_node(NULL, NULL, compatible);
+	if (!node)
+		return -ENODEV;
+
+	retval = of_device_is_available(node);
+	of_node_put(node);
+	return retval;
+}
+#else
+static int __init ktt30_of_device_is_enabled(struct device_node *from,
+						const char *compatible)
+{
+	return 1;
+}
+#endif
+
 static void __init ktt30_i2c_init(void)
 {
+	int retval;
+
 	tegra_i2c_device1.dev.platform_data = &ktt30_i2c1_platform_data;
 	tegra_i2c_device2.dev.platform_data = &ktt30_i2c2_platform_data;
 	tegra_i2c_device3.dev.platform_data = &ktt30_i2c3_platform_data;
@@ -288,7 +314,8 @@ static void __init ktt30_i2c_init(void)
 	platform_device_register(&tegra_i2c_device2);
 	platform_device_register(&tegra_i2c_device1);
 
-	if (get_audio_codec_type() == audio_codec_wm8903)
+	retval = ktt30_of_device_is_enabled(NULL, "wlf,wm8903");
+	if (retval)
 		i2c_register_board_info(4, &ktt30_codec_wm8903_info, 1);
 }
 
@@ -677,8 +704,11 @@ static struct i2c_board_info __initdata atmel_i2c_info[] = {
 
 static int __init ktt30_touch_init(void)
 {
-	if (get_touch_screen_type() != atmel_mxt_ts)
-		return -ENODEV;
+	int retval;
+
+	retval = ktt30_of_device_is_enabled(NULL, "atmel,mxt_ts");
+	if (!retval)
+		return 0;
 
 	gpio_request(TEGRA_GPIO_PH4, "atmel-irq");
 	gpio_direction_input(TEGRA_GPIO_PH4);
diff --git a/arch/arm/mach-tegra/common.c b/arch/arm/mach-tegra/common.c
index 4736434f..0d1407b 100644
--- a/arch/arm/mach-tegra/common.c
+++ b/arch/arm/mach-tegra/common.c
@@ -149,7 +149,6 @@ static int commchip_id;
 static int sku_override;
 static int debug_uart_port_id;
 static enum audio_codec_type audio_codec_name;
-static enum touch_screen_type touch_screen_name;
 static enum image_type board_image_type = system_image;
 static int max_cpu_current;
 
@@ -789,23 +788,6 @@ int tegra_get_commchip_id(void)
 
 __setup("commchip_id=", tegra_commchip_id);
 
-static int __init tegra_touch_screen_type(char *info)
-{
-	char *p = info;
-	if (!strncmp(p, "atmel_mxt_ts", 12))
-		touch_screen_name = atmel_mxt_ts;
-	else
-		touch_screen_name = ts_none;
-
-	return 1;
-}
-
-enum touch_screen_type get_touch_screen_type(void)
-{
-	return touch_screen_name;
-}
-__setup("touch=", tegra_touch_screen_type);
-
 /*
  * Tegra has a protected aperture that prevents access by most non-CPU
  * memory masters to addresses above the aperture value.  Enabling it
-- 
1.7.4.4

