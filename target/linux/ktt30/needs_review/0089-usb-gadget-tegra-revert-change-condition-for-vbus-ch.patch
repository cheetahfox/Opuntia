From 5404eac3ef858398780bedc236485ce564aa33f3 Mon Sep 17 00:00:00 2001
From: Victor Vengerov <vvengerov@dev.rtsoft.ru>
Date: Thu, 9 May 2013 03:32:57 +0400
Subject: [PATCH 089/127] usb: gadget: tegra: revert "change condition for
 vbus check"

Revert "usb: gadget: tegra:change condition for vbus check"
Use actual vbus status read from the h/w instead of cached
value. This should fix USB device detection issues on the
host side.

This reverts commit 364f8d1cf478a94acdb1bec96614372da0ec883b.

Signed-off-by: Victor Vengerov <vvengerov@dev.rtsoft.ru>
Signed-off-by: Valentine Barshak <vbarshak@dev.rtsoft.ru>
---
 drivers/usb/gadget/tegra_udc.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/gadget/tegra_udc.c b/drivers/usb/gadget/tegra_udc.c
index c130dae..9af22eb 100644
--- a/drivers/usb/gadget/tegra_udc.c
+++ b/drivers/usb/gadget/tegra_udc.c
@@ -635,7 +635,7 @@ static int tegra_ep_disable(struct usb_ep *_ep)
 	ep_num = ep_index(ep);
 
 	/* Touch the registers if cable is connected and phy is on */
-	if (udc->vbus_active) {
+	if (vbus_enabled(udc)) {
 		epctrl = udc_readl(udc, EP_CONTROL_REG_OFFSET + (ep_num * 4));
 		if (ep_is_in(ep))
 			epctrl &= ~EPCTRL_TX_ENABLE;
@@ -995,7 +995,7 @@ static int tegra_ep_dequeue(struct usb_ep *_ep, struct usb_request *_req)
 	ep_num = ep_index(ep);
 
 	/* Touch the registers if cable is connected and phy is on */
-	if (udc->vbus_active) {
+	if (vbus_enabled(udc)) {
 		epctrl = udc_readl(udc, EP_CONTROL_REG_OFFSET + (ep_num * 4));
 		if (ep_is_in(ep))
 			epctrl &= ~EPCTRL_TX_ENABLE;
@@ -1046,7 +1046,7 @@ static int tegra_ep_dequeue(struct usb_ep *_ep, struct usb_request *_req)
 	/* Enable EP */
 out:
 	/* Touch the registers if cable is connected and phy is on */
-	if (udc->vbus_active) {
+	if (vbus_enabled(udc)) {
 		epctrl = udc_readl(udc, EP_CONTROL_REG_OFFSET + (ep_num * 4));
 		if (ep_is_in(ep))
 			epctrl |= EPCTRL_TX_ENABLE;
@@ -1168,7 +1168,7 @@ static void tegra_ep_fifo_flush(struct usb_ep *_ep)
 		bits = 1 << ep_num;
 
 	/* Touch the registers if cable is connected and phy is on */
-	if (!udc->vbus_active)
+	if (!vbus_enabled(udc))
 		return;
 
 	timeout = jiffies + UDC_FLUSH_TIMEOUT_MS;
@@ -2363,13 +2363,14 @@ static int tegra_udc_start(struct usb_gadget_driver *driver,
 		goto out;
 	}
 
+
 	/* Enable DR IRQ reg and Set usbcmd reg  Run bit */
 	if (vbus_enabled(udc)) {
 		dr_controller_run(udc);
 		udc->usb_state = USB_STATE_ATTACHED;
 		udc->ep0_state = WAIT_FOR_SETUP;
 		udc->ep0_dir = 0;
-		udc->vbus_active = 1;
+		udc->vbus_active = vbus_enabled(udc);
 	}
 
 	printk(KERN_INFO "%s: bind to driver %s\n",
-- 
1.7.4.4

