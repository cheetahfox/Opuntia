--- a/target/linux/ar71xx/files/arch/mips/ath79/mach-wpj344.c
+++ b/target/linux/ar71xx/files/arch/mips/ath79/mach-wpj344.c
@@ -18,6 +18,7 @@
  *
  */
 
+#include <linux/pci.h>
 #include <linux/phy.h>
 #include <linux/platform_device.h>
 #include <linux/ath9k_platform.h>
@@ -26,33 +27,38 @@
 #include <asm/mach-ath79/ar71xx_regs.h>
 
 #include "common.h"
-#include "pci.h"
 #include "dev-ap9x-pci.h"
-#include "dev-gpio-buttons.h"
 #include "dev-eth.h"
-#include "dev-usb.h"
+#include "dev-gpio-buttons.h"
 #include "dev-leds-gpio.h"
 #include "dev-m25p80.h"
+#include "dev-nfc.h"
 #include "dev-spi.h"
+#include "dev-usb.h"
 #include "dev-wmac.h"
 #include "machtypes.h"
 
-#define WPJ344_GPIO_LED_SIG1	15
-#define WPJ344_GPIO_LED_SIG2	20
-#define WPJ344_GPIO_LED_SIG3	21
-#define WPJ344_GPIO_LED_SIG4	22
-#define WPJ344_GPIO_LED_STATUS	14
 
-#define WPJ344_GPIO_BTN_RESET	12
+
+#define WPJ344_GPIO_LED_STATUS		14
+#define WPJ344_GPIO_LED_SIG1		15
+#define WPJ344_GPIO_LED_SIG2		20
+#define WPJ344_GPIO_LED_SIG3		21
+#define WPJ344_GPIO_LED_SIG4		22
+#define WPJ344_GPIO_BUZZER		16
+
+#define WPJ344_GPIO_BTN_RESET		12
 
 #define WPJ344_KEYS_POLL_INTERVAL	20	/* msecs */
 #define WPJ344_KEYS_DEBOUNCE_INTERVAL	(3 * WPJ344_KEYS_POLL_INTERVAL)
 
-#define WPJ344_MAC0_OFFSET		0
-#define WPJ344_MAC1_OFFSET		6
+#define WPJ344_MAC0_OFFSET		0x0
+#define WPJ344_MAC1_OFFSET		0x6
 #define WPJ344_WMAC_CALDATA_OFFSET	0x1000
 #define WPJ344_PCIE_CALDATA_OFFSET	0x5000
 
+#define WPJ344_ART_SIZE		0x8000
+
 static struct gpio_led wpj344_leds_gpio[] __initdata = {
 	{
 		.name		= "wpj344:green:status",
@@ -78,6 +84,11 @@ static struct gpio_led wpj344_leds_gpio[
 		.name		= "wpj344:green:sig4",
 		.gpio		= WPJ344_GPIO_LED_SIG4,
 		.active_low	= 1,
+	},
+	{
+		.name		= "wpj344:buzzer",
+		.gpio		= WPJ344_GPIO_BUZZER,
+		.active_low	= 0,
 	}
 };
 
@@ -133,17 +144,17 @@ EXPORT_SYMBOL_GPL(ath10k_macaddr);
 
 static void __init wpj344_setup(void)
 {
+	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
         struct ath9k_platform_data *pdata;
 	u8 mac[ETH_ALEN];
-	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
 
 	ath79_register_m25p80(NULL);
+
 	ath79_register_leds_gpio(-1, ARRAY_SIZE(wpj344_leds_gpio),
 				 wpj344_leds_gpio);
 	ath79_register_gpio_keys_polled(-1, WPJ344_KEYS_POLL_INTERVAL,
 					ARRAY_SIZE(wpj344_gpio_keys),
 					wpj344_gpio_keys);
-
 	ath79_register_usb();
 	/* Reserve one for LAN */
 	ath79_init_mac(mac, (u8 *) KSEG1ADDR(0x1f02e010) + WPJ344_MAC0_OFFSET, 3);
@@ -156,35 +167,36 @@ static void __init wpj344_setup(void)
         	pdata->use_eeprom = true;
 	}
 
-	ath79_register_pci();
-
-	mdiobus_register_board_info(wpj344_mdio0_info,
-					ARRAY_SIZE(wpj344_mdio0_info));
+	ath79_setup_ar934x_eth_cfg(AR934X_ETH_CFG_RGMII_GMAC0 |
+				   AR934X_ETH_CFG_SW_ONLY_MODE);
 
 	ath79_register_mdio(1, 0x0);
 	ath79_register_mdio(0, 0x0);
 
 	ath79_init_mac(ath79_eth0_data.mac_addr, (u8 *) KSEG1ADDR(0x1f02e010) + WPJ344_MAC0_OFFSET, 0);
-	ath79_init_mac(ath79_eth1_data.mac_addr, (u8 *) KSEG1ADDR(0x1f02e010) + WPJ344_MAC0_OFFSET, 1);
 
-	ath79_setup_ar934x_eth_cfg(AR934X_ETH_CFG_RGMII_GMAC0 |
-				   AR934X_ETH_CFG_SW_ONLY_MODE);
+	mdiobus_register_board_info(wpj344_mdio0_info,
+				    ARRAY_SIZE(wpj344_mdio0_info));
 
 	/* GMAC0 is connected to an AR8327 switch */
 	ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_RGMII;
 	ath79_eth0_data.phy_mask = BIT(0);
 	ath79_eth0_data.mii_bus_dev = &ath79_mdio0_device.dev;
 	ath79_eth0_pll_data.pll_1000 = 0x06000000;
-
 	ath79_register_eth(0);
-#if 0
+
 	/* GMAC1 is connected to the internal switch */
+#ifdef GMAC1
+	ath79_init_mac(ath79_eth1_data.mac_addr, art + WPJ344_MAC1_OFFSET, 0);
 	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
 	ath79_eth1_data.speed = SPEED_1000;
 	ath79_eth1_data.duplex = DUPLEX_FULL;
 
 	ath79_register_eth(1);
 #endif
+
+	ath79_register_nfc();
 }
 
-MIPS_MACHINE(ATH79_MACH_WPJ344, "WPJ344", "Compex WPJ344", wpj344_setup);
+MIPS_MACHINE(ATH79_MACH_WPJ344, "WPJ344", "Compex WPJ344",
+	     wpj344_setup);
