--- /dev/null
+++ b/target/linux/ar71xx/patches-3.14/980-wpj344_eth_support.patch
@@ -0,0 +1,56 @@
+--- a/arch/mips/ath79/mach-db120.c
++++ b/arch/mips/ath79/mach-db120.c
+@@ -98,7 +98,7 @@ static struct ar8327_pad_cfg db120_ar832
+ 	.txclk_delay_en = true,
+ 	.rxclk_delay_en = true,
+ 	.txclk_delay_sel = AR8327_CLK_DELAY_SEL1,
+-	.rxclk_delay_sel = AR8327_CLK_DELAY_SEL2,
++	.rxclk_delay_sel = AR8327_CLK_DELAY_SEL1,
+ };
+ 
+ static struct ar8327_led_cfg db120_ar8327_led_cfg = {
+@@ -151,7 +151,7 @@ static void __init db120_setup(void)
+ 	ath79_register_mdio(1, 0x0);
+ 	ath79_register_mdio(0, 0x0);
+ 
+-	ath79_init_mac(ath79_eth0_data.mac_addr, art + DB120_MAC0_OFFSET, 0);
++	ath79_init_mac(ath79_eth0_data.mac_addr, (u8 *) KSEG1ADDR(0x1f02e010) + DB120_MAC0_OFFSET, 0);
+ 
+ 	mdiobus_register_board_info(db120_mdio0_info,
+ 				    ARRAY_SIZE(db120_mdio0_info));
+@@ -164,12 +164,14 @@ static void __init db120_setup(void)
+ 	ath79_register_eth(0);
+ 
+ 	/* GMAC1 is connected to the internal switch */
++#ifdef GMAC1
+ 	ath79_init_mac(ath79_eth1_data.mac_addr, art + DB120_MAC1_OFFSET, 0);
+ 	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+ 	ath79_eth1_data.speed = SPEED_1000;
+ 	ath79_eth1_data.duplex = DUPLEX_FULL;
+ 
+ 	ath79_register_eth(1);
++#endif
+ 
+ 	ath79_register_nfc();
+ }
+--- a/drivers/net/phy/ar8216.c
++++ b/drivers/net/phy/ar8216.c
+@@ -1454,8 +1454,8 @@ ar8327_hw_config_pdata(struct ar8xxx_pri
+ 	data->port6_status = ar8327_get_port_init_status(&pdata->port6_cfg);
+ 
+ 	t = ar8327_get_pad_cfg(pdata->pad0_cfg);
+-	if (chip_is_ar8337(priv))
+-		t |= AR8337_PAD_MAC06_EXCHANGE_EN;
++//	if (chip_is_ar8337(priv))
++//		t |= AR8337_PAD_MAC06_EXCHANGE_EN;
+ 
+ 	priv->write(priv, AR8327_REG_PAD0_MODE, t);
+ 	t = ar8327_get_pad_cfg(pdata->pad5_cfg);
+@@ -2788,6 +2788,7 @@ ar8xxx_phy_config_aneg(struct phy_device
+ static const u32 ar8xxx_phy_ids[] = {
+ 	0x004dd033,
+ 	0x004dd034, /* AR8327 */
++	0x004dd035, /* AR8334 */
+ 	0x004dd036, /* AR8337 */
+ 	0x004dd041,
+ 	0x004dd042,
