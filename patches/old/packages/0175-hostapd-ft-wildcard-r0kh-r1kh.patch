--- /dev/null
+++ b/package/network/services/hostapd/patches/999-scott-ft-wildcard-r0kh-r1kh.patch
@@ -0,0 +1,151 @@
+This enables using FT RRB without configuring each other AP locally.
+Instead, broadcast messages are exchanged.
+
+Signed-off-by: Michael Braun <michael-dev@xxxxxxxxxxxxx>
+---
+ hostapd/hostapd.conf |  4 ++++
+ src/ap/wpa_auth_ft.c | 42 +++++++++++++++++++++++++++++++++---------
+ 2 files changed, 37 insertions(+), 9 deletions(-)
+
+--- a/hostapd/hostapd.conf
++++ b/hostapd/hostapd.conf
+@@ -1306,6 +1306,8 @@ own_ip_addr=127.0.0.1
+ #r0kh=02:01:02:03:04:05 r0kh-1.example.com 000102030405060708090a0b0c0d0e0f
+ #r0kh=02:01:02:03:04:06 r0kh-2.example.com 00112233445566778899aabbccddeeff
+ # And so on.. One line per R0KH.
++# Wildcard entry:
++#r0kh=ff:ff:ff:ff:ff:ff * 00112233445566778899aabbccddeeff
+ 
+ # List of R1KHs in the same Mobility Domain
+ # format: <MAC address> <R1KH-ID> <128-bit key as hex string>
+@@ -1315,6 +1317,8 @@ own_ip_addr=127.0.0.1
+ #r1kh=02:01:02:03:04:05 02:11:22:33:44:55 000102030405060708090a0b0c0d0e0f
+ #r1kh=02:01:02:03:04:06 02:11:22:33:44:66 00112233445566778899aabbccddeeff
+ # And so on.. One line per R1KH.
++# Wildcard entry:
++#r1kh=00:00:00:00:00:00 00:00:00:00:00:00 00112233445566778899aabbccddeeff
+ 
+ # Whether PMK-R1 push is enabled at R0KH
+ # 0 = do not push PMK-R1 to all configured R1KHs (default)
+--- a/src/ap/wpa_auth_ft.c
++++ b/src/ap/wpa_auth_ft.c
+@@ -29,7 +29,6 @@ static int wpa_ft_send_rrb_auth_resp(str
+ 				     u16 status, const u8 *resp_ies,
+ 				     size_t resp_ies_len);
+ 
+-
+ static int wpa_ft_rrb_send(struct wpa_authenticator *wpa_auth, const u8 *dst,
+ 			   const u8 *data, size_t data_len)
+ {
+@@ -305,7 +304,7 @@ static int wpa_ft_pull_pmk_r1(struct wpa
+ 			      const u8 *ies, size_t ies_len,
+ 			      const u8 *pmk_r0_name)
+ {
+-	struct ft_remote_r0kh *r0kh;
++	struct ft_remote_r0kh *r0kh, *r0kh_wildcard = NULL;
+ 	struct ft_r0kh_r1kh_pull_frame frame, f;
+ 
+ 	r0kh = sm->wpa_auth->conf.r0kh_list;
+@@ -314,8 +313,14 @@ static int wpa_ft_pull_pmk_r1(struct wpa
+ 		    os_memcmp_const(r0kh->id, sm->r0kh_id, sm->r0kh_id_len) ==
+ 		    0)
+ 			break;
++		if (r0kh->id_len == 1 && r0kh->id[0] == '*')
++			r0kh_wildcard = r0kh;
+ 		r0kh = r0kh->next;
+ 	}
++	if (r0kh == NULL && r0kh_wildcard != NULL) {
++		wpa_printf(MSG_DEBUG, "FT: Using wildcard R0KH-ID");
++		r0kh = r0kh_wildcard;
++	}
+ 	if (r0kh == NULL) {
+ 		wpa_hexdump(MSG_DEBUG, "FT: Did not find R0KH-ID",
+ 			    sm->r0kh_id, sm->r0kh_id_len);
+@@ -1313,7 +1318,7 @@ static int wpa_ft_rrb_rx_pull(struct wpa
+ 	struct ft_r0kh_r1kh_pull_frame f;
+ 	const u8 *crypt;
+ 	u8 *plain;
+-	struct ft_remote_r1kh *r1kh;
++	struct ft_remote_r1kh *r1kh, *r1kh_wildcard = NULL;
+ 	struct ft_r0kh_r1kh_resp_frame resp, r;
+ 	u8 pmk_r0[PMK_LEN];
+ 	int pairwise;
+@@ -1327,8 +1332,15 @@ static int wpa_ft_rrb_rx_pull(struct wpa
+ 	while (r1kh) {
+ 		if (os_memcmp(r1kh->addr, src_addr, ETH_ALEN) == 0)
+ 			break;
++		if (is_zero_ether_addr(r1kh->addr) &&
++		    is_zero_ether_addr(r1kh->id))
++			r1kh_wildcard = r1kh;
+ 		r1kh = r1kh->next;
+ 	}
++	if (r1kh == NULL && r1kh_wildcard != NULL) {
++		wpa_printf(MSG_DEBUG, "FT: Using wildcard R1KH-ID");
++		r1kh = r1kh_wildcard;
++	}
+ 	if (r1kh == NULL) {
+ 		wpa_printf(MSG_DEBUG, "FT: No matching R1KH address found for "
+ 			   "PMK-R1 pull source address " MACSTR,
+@@ -1449,7 +1461,7 @@ static int wpa_ft_rrb_rx_resp(struct wpa
+ 	struct ft_r0kh_r1kh_resp_frame f;
+ 	const u8 *crypt;
+ 	u8 *plain;
+-	struct ft_remote_r0kh *r0kh;
++	struct ft_remote_r0kh *r0kh, *r0kh_wildcard = NULL;
+ 	int pairwise, res;
+ 
+ 	wpa_printf(MSG_DEBUG, "FT: Received PMK-R1 pull response");
+@@ -1461,8 +1473,14 @@ static int wpa_ft_rrb_rx_resp(struct wpa
+ 	while (r0kh) {
+ 		if (os_memcmp(r0kh->addr, src_addr, ETH_ALEN) == 0)
+ 			break;
++		if (r0kh->id_len == 1 && r0kh->id[0] == '*')
++			r0kh_wildcard = r0kh;
+ 		r0kh = r0kh->next;
+ 	}
++	if (r0kh == NULL && r0kh_wildcard != NULL) {
++		wpa_printf(MSG_DEBUG, "FT: Using wildcard R0KH-ID");
++		r0kh = r0kh_wildcard;
++	}
+ 	if (r0kh == NULL) {
+ 		wpa_printf(MSG_DEBUG, "FT: No matching R0KH address found for "
+ 			   "PMK-R0 pull response source address " MACSTR,
+@@ -1518,7 +1536,7 @@ static int wpa_ft_rrb_rx_push(struct wpa
+ 	struct ft_r0kh_r1kh_push_frame f;
+ 	const u8 *crypt;
+ 	u8 *plain;
+-	struct ft_remote_r0kh *r0kh;
++	struct ft_remote_r0kh *r0kh, *r0kh_wildcard = NULL;
+ 	struct os_time now;
+ 	os_time_t tsend;
+ 	int pairwise;
+@@ -1532,8 +1550,14 @@ static int wpa_ft_rrb_rx_push(struct wpa
+ 	while (r0kh) {
+ 		if (os_memcmp(r0kh->addr, src_addr, ETH_ALEN) == 0)
+ 			break;
++		if (r0kh->id_len == 1 && r0kh->id[0] == '*')
++			r0kh_wildcard = r0kh;
+ 		r0kh = r0kh->next;
+ 	}
++	if (r0kh == NULL && r0kh_wildcard != NULL) {
++		wpa_printf(MSG_DEBUG, "FT: Using wildcard R0KH-ID");
++		r0kh = r0kh_wildcard;
++	}
+ 	if (r0kh == NULL) {
+ 		wpa_printf(MSG_DEBUG, "FT: No matching R0KH address found for "
+ 			   "PMK-R0 push source address " MACSTR,
+@@ -1782,10 +1806,11 @@ void wpa_ft_push_pmk_r1(struct wpa_authe
+ 	wpa_printf(MSG_DEBUG, "FT: Deriving and pushing PMK-R1 keys to R1KHs "
+ 		   "for STA " MACSTR, MAC2STR(addr));
+ 
+-	r1kh = wpa_auth->conf.r1kh_list;
+-	while (r1kh) {
++	for (r1kh = wpa_auth->conf.r1kh_list; r1kh; r1kh = r1kh->next) {
++		if (is_zero_ether_addr(r1kh->addr) ||
++		    is_zero_ether_addr(r1kh->id))
++			continue;
+ 		wpa_ft_generate_pmk_r1(wpa_auth, r0, r1kh, addr, r0->pairwise);
+-		r1kh = r1kh->next;
+ 	}
+ }
+ 
