From 05010ff0061c5fb8826cde4c810cedc7c43b4704 Mon Sep 17 00:00:00 2001
From: syoder <syoder@imagestream.com>
Date: Fri, 28 Mar 2014 10:37:59 -0500
Subject: [PATCH] Update correct openvpn init script

---
 package/network/services/openvpn/files/openvpn.init | 2 ++
 1 file changed, 2 insertions(+)

--- a/package/network/services/openvpn/files/openvpn.init
+++ b/package/network/services/openvpn/files/openvpn.init
@@ -4,7 +4,7 @@
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
 
-START=90
+START=95
 STOP=10
 
 USE_PROCD=1
@@ -60,17 +60,23 @@ openvpn_add_instance() {
 	local dir="$2"
 	local conf="$3"
 
-	procd_open_instance
+	procd_open_instance $name
 	procd_set_param command "$PROG"	\
 		--syslog "openvpn($name)" \
 		--status "/var/run/openvpn.$name.status" \
 		--cd "$dir" \
 		--config "$conf"
 	procd_set_param file "$dir/$conf"
-	procd_set_param respawn
+	procd_set_param respawn 3600 10 0
 	procd_close_instance
 }
 
+openvpn_fixup_script_security() {
+	if [ "$#" -gt 1 ] ; then
+		config_set "$s" script_security "$1"
+	fi
+}
+
 start_instance() {
 	local s="$1"
 
@@ -93,10 +99,35 @@ start_instance() {
 	[ ! -d "/var/etc" ] && mkdir -p "/var/etc"
 	[ -f "/var/etc/openvpn-$s.conf" ] && rm "/var/etc/openvpn-$s.conf"
 
+	# Check to be sure we specify a device. If none specified, we use dynamic tun/tap -- Scott
+        config_get dev "$s" 'dev'
+        if [ "$dev" = "" ] ; then
+                config_get dev_type "$s" 'dev_type'
+                config_set "$s" dev $dev_type
+        fi
+
+	# Client mode is specified by an empty "mode" variable. We need the client bool flag set instead -- Scott
+        config_get mode "$s" 'mode'
+        if [ "$mode" = "" ] ; then
+                config_set "$s" client 1
+	else
+                config_set "$s" client 0
+ 	fi
+ 
+	# Fixup script-security for OpenVPN version >= 2.4
+	config_get script_security "$s" 'script_security'
+	openvpn_fixup_script_security $script_security
+
+	# Fix mtu-disc error with IPv6  for OpenVPN version >= 2.4
+	config_get proto "$s" 'proto'
+	if [ "$proto" = "udp" ] ; then
+		config_set "$s" proto "udp4"
+	fi
+
 	# append flags
 	append_bools "$s" \
 		allow_recursive_routing auth_nocache auth_user_pass_optional bind ccd_exclusive client client_cert_not_required \
-		client_to_client comp_noadapt disable disable_occ down_pre duplicate_cn fast_io float http_proxy_retry \
+		client_to_client comp_lzo comp_noadapt disable disable_occ down_pre duplicate_cn fast_io float http_proxy_retry \
 		ifconfig_noexec ifconfig_nowarn ifconfig_pool_linear management_forget_disconnect management_hold \
 		management_query_passwords management_signal mktun mlock mtu_test multihome mute_replay_warnings \
 		ncp_disable nobind no_iv no_name_remapping no_replay opt_verify passtos persist_key persist_local_ip \
@@ -107,7 +138,7 @@ start_instance() {
 	# append params
 	append_params "$s" \
 		cd askpass auth auth_retry auth_user_pass auth_user_pass_verify bcast_buffers ca cert capath \
-		chroot cipher client_config_dir client_connect client_disconnect comp_lzo compress connect_freq \
+		chroot cipher client_config_dir client_connect client_disconnect compress connect_freq \
 		connect_retry connect_timeout connect_retry_max crl_verify dev dev_node dev_type dh \
 		ecdh_curve echo engine explicit_exit_notify fragment group hand_window hash_size http_proxy \
 		http_proxy_option http_proxy_timeout ifconfig ifconfig_pool ifconfig_pool_persist ifconfig_push \
